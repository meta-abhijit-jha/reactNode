#buRounded {
    border-radius: 5px;
    margin: 5px;
}

#buRounded2 {
    border-radius: 5px 15px 5px 10px;
    margin: 5px;
}

#borderImageExample {
    background-color: rgb(245, 123, 9);
    margin: 5px;
    width: 70%;
    height: 50px;
    border : 10px solid transparent;
    border-image: url(./img/border-image.jpg) 30 round;
}

.multiBGExample {
    margin: 15px;
    width: 70%;
    height: 150px;
    background-image: url(./img/quote.png), url(./img/mountain.jpeg);
    background-size: 80px, 100%;
    background-position: bottom right, center;
    background-repeat: no-repeat;
}

/* contain and cover can be used also in above example */

#borderOrigin {
    border: 10px solid black;
    background-origin: content-box; /*padding-box or border-box also*/
}

#borderClip {
    border: 10px solid black;
    padding: 15px;
    background-clip: content-box; /*padding-box or border-box also*/
}

#colorExample {
    color: rgb(1, 7, 19);
    margin: 15px;
    width: 70%;
    height: 50px;
    background-color: chartreuse;
    opacity: 0.7;
}

.gradientExample {
    margin: 15px;
    width: 70%;
    height: 100px;
    /*up to down*/
    background-image: linear-gradient(rgb(146, 6, 240), blue,skyblue);
}

/*To repeat gradient give % to colors */
/*can be diagonal also*/
#rightleftGradient {
    background-image: linear-gradient(to right, violet, indigo, blue, green, yellow, orange, red);
}

/*Shape can/can't be described*/
#radialGradient {
    background-image: radial-gradient(circle,red, yellow, green)
}

/* horizotal shadow, vertical, blurring, color */
#shadow1 {
    text-shadow: 2px 2px 5px yellow;
}

#shadow2 {
    text-shadow: 0 0 5px yellow, 0 0 2px red;
}

#boxShadow {
    box-shadow: 10px 10px 5px black;
}

/*Font Definition*/
@font-face {
    font-family: myFont;
    src: url(./fonts/Halimun.ttf);
}

/*Font Usage*/
#fontFaceExample {
    font-family: myFont;
}

#buTransform:hover {
    background-color: white;
    /*transform: rotate(30deg);*/
    /*transform: scale(0.5);*/
    /*transform: scaleY(2);*/
    /*transform: skewX(20deg);*/

    /*matrix(scaleX(),skewY(),skewX(),scaleY(),translateX(),translateY())*/
    transform: matrix(1, -0.3, 0, 1, 0, 0);
}

#bu3DTransform:hover {
    background-color: blue;
    transform: rotateX(60deg);
    /*transform: rotate3d(30deg, 30deg, 90deg);*/
}

#buTransition {
    width: 140px;
    height: 25px;
    /*
    background-color: slateblue;
    transition: width 5s, height 2s;
    transition-timing-function: ease;
    transition-delay: 1s;*/
    transition: width 2s, height 2s, transform 2s;
}

#buTransition:hover {
    width: 140px;
    height: 30px;
    background-color: skyblue;
    transform: rotate(180deg);
}

@keyframes example {
    0% {
        background-color: violet;
    }
    14% {
        background-color: indigo;
    }
    28% {
        background-color: blue;
    }
    42% {
        background-color: green;
    }
    56% {
        background-color: yellow;
    }
    70% {
        background-color: orange;
    }
    84% {
        background-color: red;
    }
    100% {
        background-color: purple;
    }
    
}

/*if not hover then run automatically*/
#buAnimate {
    background-color: white;
    animation-name: example;
    animation-duration: 5s;
    animation-delay: 3s;
    animation-iteration-count: 2; /* can be infinte */
    /*animation-direction: reverse; or alternate, alternate-reverse */
    animation-timing-function: ease;
    /*inherit last state when animation is over*/
    animation-fill-mode: forwards; /*or backwards, both*/

}

.tooltiptext {
    font-size: small;
    border-radius: 5%;
    visibility: hidden;
    color: white;
    background-color: black;
}

.tooltip:hover .tooltiptext {
    visibility: visible;
}

#imgEffect {
    width: 50%;
    height: 100px;
    background-color: teal;
}

#responsiveImg {
    width: 100%;
    height: 100%;
    opacity: 0.8;
    filter: grayscale(100%);
}

#imgEffect:hover #responsiveImg {
    opacity: 0;
    transition: .5s ease;
}

#buDisabled {
    width: 100px;
    height: 30px;
    margin-top: 10px;
    border: none;
    background-color:green;
    opacity: 0.5;
    cursor: not-allowed;
}

#multiColumn {
    column-count: 3;
    column-gap: 10px;
    column-rule: 1px solid grey;
    background-color: var(--main-bg-color); 
}

#columnSpan {
    column-span: all;
}

/*CSS Variable Declaration*/
:root {
    --main-bg-color: teal;
    --body-bg-color: grey;
}

.resizableBlock {
    text-align: center;
    height: 200px;
    width: 300px;
    border: 1px solid black;
    resize: both; /*horizontal, vertical or none*/
    overflow: auto;
    background-color: var(--main-bg-color);
}

body {
    background-color: var(--body-bg-color);
}

/*Set all elements so that they take no extra size, which is more than their originally defined one*/
* {
    box-sizing: border-box;  
}

#flexContainer {
    margin-top: 50px;
    display: flex;
    height: auto;
    background-color: lightblue;
    flex-direction: row;
    flex-wrap: wrap;
    /*Shorthand for above*/
    /*flex-flow: row wrap*/
    justify-content: center;
    align-items: center;
    /*oreder can be given to child items*/
    /*flex-grow defines the ratio of size between child items*/
    /*flex-shrink is used to declare how much a child item can shrink w.r.t. other child items*/
    /*flex-basis gives initial length to the flex items*/
}

@media screen and (min-width: 600px) {
    #mediaQueryExample {
        width: 50%;
    }

    #flexContainer {
        justify-content: space-around; 
        flex-direction: row;
    }
}

@media screen and (max-width: 600px) {
    .resizableBlock {
        margin-top: 5px;
    }
}


